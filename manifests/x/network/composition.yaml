apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: vpc-subnet
spec:
  compositeTypeRef:
    apiVersion: aws.example.org/v1alpha1
    kind: xNetwork
  mode: Pipeline
  pipeline:
  - step: patch-and-transform
    functionRef:
      name: function-patch-and-transform  # your cluster-installed function
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
        - name: vpc
          base:
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: VPC
            metadata:
              labels:
                app: xdemo
            spec:
              forProvider:
                cidrBlock: 192.168.0.0/16
                region: us-east-1
              providerConfigRef:
                name: user-keys
          patches:
            # Patch tags.Name from composite resource metadata.name
            - type: FromCompositeFieldPath
              fromFieldPath: metadata.name
              toFieldPath: spec.forProvider.tags.Name
            # Patch the VPC CIDR (once created) into composite resource status
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.cidrBlock
              toFieldPath: status.vpcCidrBlock
        - name: subnet-1a
          base:
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: Subnet
            metadata:
              labels:
                app: xdemo
                az: 1a
            spec:
              forProvider:
                region: us-east-1
                cidrBlock: 192.168.0.0/24
                vpcIdSelector:
                  # example to use matchLabels instead of matchControllerRef
                  matchLabels:
                    app: xdemo
              providerConfigRef:
                name: user-keys
          patches:
            # Patch the VPC CIDR (once created) into composite resource status
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.cidrBlock
              toFieldPath: status.vpcCidrBlock
            # Patch tags.Name is composite-name + "-1a"
            - type: FromCompositeFieldPath
              fromFieldPath: metadata.name
              toFieldPath: spec.forProvider.tags.Name
              transforms:
              - type: string
                string:
                  type: Format
                  fmt: "%s-1a"
        - name: subnet-1b
          base:
            apiVersion: ec2.aws.upbound.io/v1beta1
            kind: Subnet
            metadata:
              labels:
                app: xdemo
                az: 1b
            spec:
              forProvider:
                region: us-east-1
                cidrBlock: 192.168.1.0/24
                vpcIdSelector:
                  # example to use matchLabels instead of matchControllerRef
                  matchLabels:
                    app: xdemo
              providerConfigRef:
                name: user-keys
          patches:
            # Patch tags.Name is composite-name + "-1b"
            - type: FromCompositeFieldPath
              fromFieldPath: metadata.name
              toFieldPath: spec.forProvider.tags.Name
              transforms:
              - type: string
                string:
                  type: Format
                  fmt: "%s-1b"
            # Patch the VPC CIDR (once created) into composite resource status
            - type: ToCompositeFieldPath
              fromFieldPath: status.atProvider.cidrBlock
              toFieldPath: status.vpcCidrBlock
